user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}
#监听443端口的流量里的sni域名
stream {
    # sni分流，如果sni匹配到以下域名则跳转对应端口
    map $ssl_preread_server_name $backend_name {

        site.example.com             site;   # 正常的一个网站 site.example.com
	itunes.apple.com             reality1; # 偷别人证书方式，偷取对象的域名（需要支持tls1.3和h2），我这里是偷苹果的
        reality.example.com          reality2; # 正常的一个网站，用来被偷证书，自己的一个需要被偷取的网站 reality.example.com
        vless.example.com            vlessws; # 古董协议vless ws tls配置
        static.example.com           static; #静态网站域名
        files.example.com            files; #静态网站域名
        default                      site; #都不匹配默认跳转到site
    }
    
	#正常网站，当443端口sni匹配到site.example.com，则转发到8001端口执行后续操作，此处为访问一个网站
    upstream site {
        server 127.0.0.1:8001;
	server [::1]:8001;      # IPv6 地址
    }

	#偷别人的证书，当443端口sni匹配到itunes.apple.com，则直接转发到8012端口执行后续操作，此处转发到sing-box监听的8012端口之后由reality回落到itunes.apple.com去偷证书
    upstream reality1 {
        server 127.0.0.1:8012;
	server [::1]:8012;      # IPv6 地址
    }
    #偷自己的证书，当443端口sni匹配到reality.example.com，则直接转发到8013端口执行后续操作，此处转发到sing-box监听的8013端口之后由reality回落到自己的8003端口去偷reality.example.com的证书
    upstream reality2 {
        server 127.0.0.1:8013;
	server [::1]:8013;      # IPv6 地址
    }

    upstream vlessws {
        server 127.0.0.1:8004;
	server [::1]:8004;      # IPv6 地址
    }
        # 静态网页，对应下方
    upstream static {
        server 127.0.0.1:8005;
	server [::1]:8005;  
    }
    # 静态网页，对应下方
    upstream files {
        server 127.0.0.1:8006;
	server [::1]:8005;  
    }
    # 监听 443 并开启 ssl_preread,监听对应域名并转发
    server {
        listen 443 reuseport;
        listen [::]:443 reuseport; #ipv6
        proxy_pass  $backend_name;
        ssl_preread on;
    }
}

http {
    log_format main '[$time_local] $remote_addr "$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/access.log main;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    map $remote_addr $proxy_forwarded_elem {
        ~^[0-9.]+$        "for=$remote_addr";
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";
        default           "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {
        "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";
        default "$proxy_forwarded_elem";
    }

    server {
        listen 80;
        listen [::]:80;
        return 301 https://$host$request_uri;
    }

    #正常网站443端口监听sni site.example.com之后跳转到8001端口在进行后续操作
    server {
        listen 8001 ssl http2;
        listen [::]:8001 ssl http2;  # 同时监听 IPv6 地址
        ssl_certificate       /root/cert/site.example.com.cer;  # 证书位置，可以用泛域名证书
        ssl_certificate_key   /root/cert/site.example.com.key;  # 私钥位置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:AES256-GCM-SHA384:CHACHA20-POLY1305;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://127.0.0.1:5244; # 你自己的动态网站端口或者反代到其他网站，下面那个server就是反代到bing
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    
    #偷取自己证书，和上文的reality2对应，这里监听8003端口，对应sing-box那边监听reality2那边的8013，然后回落到nginx这边的8003端口偷取这里reality.example.com的证书
    server {
        listen 8003 ssl http2;
        listen [::]:8003 ssl http2;  # 同时监听 IPv6 地址
        ssl_certificate       /root/cert/reality.example.com.cer;  # 证书位置，可以用泛域名证书一劳永逸
        ssl_certificate_key   /root/cert/reality.example.com.key;  # 私钥位置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:AES256-GCM-SHA384:CHACHA20-POLY1305;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass https://www.bing.com; #伪装网址或者你改成自己的动态网站
            proxy_ssl_server_name on;
            proxy_redirect off;
            sub_filter_once off;
            sub_filter "www.bing.com" $server_name;
            proxy_set_header Host "www.bing.com";
            proxy_set_header Referer $http_referer;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Accept-Encoding "";
            proxy_set_header Accept-Language "zh-CN";
        }
    }
    # vless ws tls的操作
    server {
            listen  8004 ssl http2;
        listen [::]:8004 ssl http2;  # 同时监听 IPv6 地址
            ssl_certificate       /root/cert/vless.example.com.cer;  # 证书位置，可以用泛域名证书一劳永逸
            ssl_certificate_key   /root/cert/vless.example.com.key;  # 私钥位置
            
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:AES256-GCM-SHA384:CHACHA20-POLY1305;
            ssl_prefer_server_ciphers on;


        location / {
            #proxy_pass http://127.0.0.1:5244; #你自己的网站
            proxy_pass https://www.bing.com; #伪装网址或者你改成自己的动态网站
            proxy_ssl_server_name on;
            proxy_redirect off;
            sub_filter_once off;
            sub_filter "www.bing.com" $server_name;
            proxy_set_header Host "www.bing.com";
            proxy_set_header Referer $http_referer;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Accept-Encoding "";
            proxy_set_header Accept-Language "zh-CN";

    }


        location /xctxabc {   #ws路径，要是想多个则在添加一个即可
            proxy_redirect off;
            proxy_pass http://127.0.0.1:8014; #vless ws的端口,我这里对应sing-box的vlessws入站
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # location /vveg26/ {   #其他网站端口，比如说xui
        #     proxy_redirect off;
        #     proxy_pass http://127.0.0.1:13883;  #xui监听端口
        #     proxy_http_version 1.1;
        #     proxy_set_header Host $host;
        # }
} 
    # 静态网页
    server {
        listen 8005 ssl http2;
        listen [::]:8005 ssl http2;  # 同时监听 IPv6 地址
        server_name static.example.com;
        ssl_certificate /root/cert/cert.crt;
        ssl_certificate_key /root/cert/private.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:AES256-GCM-SHA384:CHACHA20-POLY1305;
        ssl_prefer_server_ciphers on;
        root /path/to/static/files;  # 替换为您的静态文件根目录的实际路径
        index index.html;  # 替换为您的默认索引文件的实际名称

        location / {
            try_files $uri $uri/ =404;
        }
    }
    #文件分享
    server {
    listen 8006 ssl http2;
        listen [::]:8006 ssl http2;  # 同时监听 IPv6 地址
    server_name files.example.com;
    ssl_certificate /root/cert/cert.crt;
    ssl_certificate_key /root/cert/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:AES256-GCM-SHA384:CHACHA20-POLY1305;
    ssl_prefer_server_ciphers on;
    root /path/to/files;  # 替换为您要分享的文件所在的实际路径

    location / {
        autoindex on;  # 启用目录列表
        autoindex_exact_size off;  # 显示文件大小的近似值，而不是精确值
        autoindex_localtime on;  # 显示文件的本地时间而不是 GMT 时间
    }
}
}
